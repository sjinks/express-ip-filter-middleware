name: Publish Package

on:
  release:
    types:
      - released
  workflow_dispatch:

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare the source code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Node.js environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Create tarball
        run: npm pack

      - name: Save tarball
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: package
          path: "*.tgz"
          retention-days: 1

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      contents: read
      statuses: write
      id-token: write
    steps:
      - name: Set commit status to PENDING
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: Publish to npm
          sha: ${{ github.sha }}

      - name: Set up Node.js environment
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          registry-url: https://registry.npmjs.org/

      - name: Download tarball
        uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4
        with:
          name: package

      - name: Publish package
        run: npm publish *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set final commit status
        uses: myrotvorets/set-commit-status-action@3730c0a348a2ace3c110851bed53331bc6406e9f # v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: Publish to npm
          sha: ${{ github.sha }}
        if: always()
